package http

import (
	"net/http"
	"encoding/json"
)

// Get All is a handler for get todos API
//
//	@Summary		GetAll new todos
//	@Description	get all todo list
//	@Tags			orders
//	@Accept			json
//	@Produce		json
//	@Success		200	{array}	string
//	@Router			/todos [get]
func Get(w http.ResponseWriter, r *http.Request) {

	todosRes, error := json.Marshal(Todos)

	if error == nil {
		w.Header().Set("Content-Type", "application/json")
		w.Write(todosRes)
	} else {
		w.Write([]byte("Error : " + error.Error()))
	}

}

func GetDB(w http.ResponseWriter, r *http.Request) {

	todosRes, error := json.Marshal(Todos)

	if error == nil {
		w.Header().Set("Content-Type", "application/json")
		w.Write(todosRes)
	} else {
		w.Write([]byte("Error : " + error.Error()))
	}

}

// Create is a handler for create todos API
//
//	@Summary		Create new todos
//	@Description	get string by ID
//	@Tags			orders
//	@Accept			json
//	@Produce		json
//	@Success		200	{array}	string
//	@Router			/todos [post]
func Create(w http.ResponseWriter, r *http.Request) {
	var t Todo
	decoder := json.NewDecoder(r.Body)
	_ = decoder.Decode(&t)
	Todos = append(Todos, &t)
	w.Write([]byte("Success add todo " + t.Name))
}

// Delete is a handler for create todos API
//
//	@Summary		Delete new todos
//	@Description	Delete string by ID
//	@Tags			orders
//	@Accept			json
//	@Produce		json
//	@Success		200	{array}	string
//	@Router			/todos/{id} [delete]
func Delete(w http.ResponseWriter, r *http.Request) {
	id := mux.Vars(r)["id"]
	for i := 0; i < len(Todos); i++ {
		if Todos[i].ID == id {
			Todos = append(Todos[:i], Todos[i+1:]...)
			w.Write([]byte("Success delete todo " + id))
			return
		}
	}
}

// Put is a handler for create todos API
//
//	@Summary		Update new todos
//	@Description	Update todos by ID
//	@Tags			orders
//	@Accept			json
//	@Produce		json
//	@Success		200	{array}	string
//	@Router			/todos/{id} [put]
func Put(w http.ResponseWriter, r *http.Request) {
	id := mux.Vars(r)["id"]
	for i := 0; i < len(Todos); i++ {
		if Todos[i].ID == id {
			var t Todo
			decoder := json.NewDecoder(r.Body)
			_ = decoder.Decode(&t)
			Todos[i] = &t
			w.Write([]byte("Success update todo " + t.ID))
			return
		}
	}
}

// GetByID is a handler for get todos API
//
//	@Summary		GetByID new todos
//	@Description	get all todo list
//	@Tags			orders
//	@Accept			json
//	@Produce		json
//	@Success		200	{array}	string
//	@Router			/todos/{id} [get]
func GetByID(w http.ResponseWriter, r *http.Request) {
	id := mux.Vars(r)["id"]
	for i := 0; i < len(Todos); i++ {
		if Todos[i].ID == id {
			todosRes, _ := json.Marshal(Todos[i])
			w.Header().Set("Content-Type", "application/json")
			w.Write(todosRes)
		}
	}
}